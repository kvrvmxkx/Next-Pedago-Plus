import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Nav from "@/components/nav";
import Footer from "@/components/footer";
import { Toaster } from "sonner";

import { auth } from '@/lib/auth';
import { headers } from "next/headers";


const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const adminRoutes = "/admin";
const chatRoutes = "/chat";

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

  const session = await auth.api.getSession({
    headers: await headers()
  })

  const headerList = await headers();

  const pathName = headerList.get("x-current-path");

  const isAdminRoute = pathName ? pathName.includes(adminRoutes) : false;
  const isChatRoute = pathName ? pathName.includes(chatRoutes) : false;

  return (
    <html lang="en">
      <body className={`flex flex-col justify-between bg-app-background min-h-screen font-[family-name:var(--font-geist-sans)] antialiased ${geistSans.variable} ${geistMono.variable}`}>
        {!isAdminRoute || !isChatRoute && <Nav session={session} />}  
          {children}
        {!isAdminRoute || !isChatRoute && <Footer />}  
        <Toaster richColors closeButton />
      </body>
    </html>
  );
}